apply plugin: 'com.android.application'

def static releaseTime() {
    return new Date().format("yyyy-MM-dd_HH-mm-ss", TimeZone.getTimeZone("GMT+8"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    // 关闭PNG合法性检查的
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    // 开启dataBinding
    dataBinding.enabled = true
    // 移除lint检查的error
    lintOptions.abortOnError = false
    // 关闭增量编译
    // compileOptions.incremental = false

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        // dex突破65535的限制
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    compileOptions {
        encoding "UTF-8"
    }

    signingConfigs {
        debug {
            // No debug config
        }

        // 正式版
        release {
            // 签名store文件路径
            storeFile file(rootProject.ext.android.storeFile)
            // 签名store文件的密码
            storePassword rootProject.ext.android.storePassword
            // 别名
            keyAlias rootProject.ext.android.keyAlias
            // 别名的密码
            keyPassword rootProject.ext.android.keyPassword
        }
    }
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            signingConfig signingConfigs.debug

            // 版本名后缀
            versionNameSuffix "-debug"
            // 是否混淆
            minifyEnabled false
            // zipAlign优化
            zipAlignEnabled false
            // 是否可以debug
            debuggable true
            // 移除无用的resource文件
            shrinkResources false
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            signingConfig signingConfigs.release

            // 是否混淆
            minifyEnabled true
            // zipAlign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 混淆配置文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 保留基础签名版本
                        def fileName
                        if (variant.productFlavors[0].name == 'app') {
                            fileName = "app-release.apk"
                        } else {
                            fileName = "Factory_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        }
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
    }
    // 多渠道打包
    productFlavors {
        // GooglePlay {}
        // umeng {}
        // wandoujia {}
        // qihu360 {}
        // baidu {}
        // xiaomi {}
        // tencent {}
        // uc {}
        app {}

        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = [APP_CHANNEL_VALUE: name]
        }
    }
}

// 导入本地lib
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile project(':basic')
    compile project(':logic')
    compile project(':network')
    compile project(':tools')
    compile project(':views')

    // Sweet Alert Dialog
    // compile 'cn.pedant.sweetalert:library:1.3'
    compile 'com.pnikosis:materialish-progress:1.0'
    compile(name: 'sweet-alert-v1.0', ext: 'aar')
    // 加载弹窗 https://github.com/ForgetAll/LoadingDialog
    compile(name: 'LoadingDialog-v1.0.4', ext: 'aar')

    // 底部导航栏 https://github.com/Ashok-Varma/BottomNavigation
    compile 'com.ashokvarma.android:bottom-navigation-bar:1.4.3'
    // 图片加载
    compile rootProject.ext.dependencies["glide"]
    // OKHttp方式加载网络图片
    compile rootProject.ext.dependencies["glide-okhttp3-integration"]
    // 强大的 RecyclerView 适配器
    compile rootProject.ext.dependencies["baseRecyclerViewAdapterHelper"]
    // 刷新控件
    compile rootProject.ext.dependencies["ultraPullToRefresh"]
    // URL路由
    compile rootProject.ext.dependencies["ARouter"]
    annotationProcessor rootProject.ext.dependencies["ARouter-compiler"]
    // PDF 预览
    compile rootProject.ext.dependencies["PDFViewer"]
    // WebView 封装
    compile rootProject.ext.dependencies["AdvancedWebView"]
    // 图片轮播控件
    compile rootProject.ext.dependencies["Banner"]
}